# Analog Devices ADuCM360

source [find target/swj-dp.tcl]

if { [info exists CHIPNAME] } {
   set _CHIPNAME $CHIPNAME
} else {
   set _CHIPNAME aducm360
}

if { [info exists ENDIAN] } {
   set _ENDIAN $ENDIAN
} else {
   # This config file was defaulting to big endian..
   set _ENDIAN little
}

if { [info exists WORKAREASIZE] } {
   set _WORKAREASIZE $WORKAREASIZE
} else {
   set _WORKAREASIZE 0x1000
}

if { [info exists CPUTAPID] } {
   set _CPUTAPID $CPUTAPID
} else {
   set _CPUTAPID 0x2ba01477
}

swj_newdap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID

adapter_khz 5000

##
## Target configuration
##
set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME cortex_m -endian $_ENDIAN -chain-position $_TARGETNAME

$_TARGETNAME configure -work-area-phys 0x20000000 -work-area-size $_WORKAREASIZE -work-area-backup 0

# flash size will be probed
set _FLASHNAME $_CHIPNAME.flash
flash bank $_FLASHNAME aducm360 0x00 0 0 0 $_TARGETNAME

adapter_nsrst_delay 100
cortex_m reset_config vectreset

init
halt
flash probe 0 
proc peek32 {address} {
	mem2array t 32 $address 1
	return $t(0)
}

#implement ADI Halt after bootkernel
proc init_reset {mode} {
	echo "RESET: ADI halt after bootkernel"
	set rvec [peek32 0x4]
	set emcr [peek32 0xe000edfc]
	set hcsr [peek32 0xe000edf0]
	bp $rvec 2 hw
	mww 0xe000edf0 0xA05F0003
	mww 0xe000edfc 0x1000500
	mww 0xE000ED0C 0x05FA0004
	mww 0xe000edfc $emcr
	mww 0xe000edf0 $hcsr
	rbp $rvec

	if { $mode == "run" } {
	   resume
	}
}
