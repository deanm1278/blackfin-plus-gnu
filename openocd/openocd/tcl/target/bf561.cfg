set CHIPNAME bf561
set CPUTAPID 0x027bb0cb

if {![info exists SDRAM_SIZE]} {
    set SDRAM_SIZE 0x20000000
}
if {![info exists FLASH_SIZE]} {
    set FLASH_SIZE 0x4000000
}

set MAP_XML [find target/bf561_memory_map.xml]
set MAP_FILE [open $MAP_XML]
set _MEMORY_MAP [read $MAP_FILE]
close $MAP_FILE

# Substitute SDRAM_SIZE and FLASH_SIZE
global MEMORY_MAP
set MEMORY_MAP [subst $_MEMORY_MAP]

# target config

set BLACKFIN_CONFIG_XML [find target/bf561_config.xml]
set BLACKFIN_CONFIG_FILE [open $BLACKFIN_CONFIG_XML]
set _BLACKFIN_CONFIG [read $BLACKFIN_CONFIG_FILE]
close $BLACKFIN_CONFIG_FILE

global BLACKFIN_CONFIG
set BLACKFIN_CONFIG $_BLACKFIN_CONFIG

# Maybe we should put the following into cpu/blackfin/bf561.cfg
set _CHIPNAME $CHIPNAME
set _CPUTAPID $CPUTAPID

# TAP for Core B
jtag newtap $_CHIPNAME b -irlen 5 -expected-id $_CPUTAPID -ignore-version

# TAP for Core A
jtag newtap $_CHIPNAME a -irlen 5 -expected-id $_CPUTAPID -ignore-version

# Create target fore Core B
set _TARGETNAME_B $_CHIPNAME.b
target create $_TARGETNAME_B blackfin -chain-position $_TARGETNAME_B

# Create target fore Core A
set _TARGETNAME_A $_CHIPNAME.a
target create $_TARGETNAME_A blackfin -chain-position $_TARGETNAME_A

adapter_nsrst_delay 100
jtag_ntrst_delay 100

reset_config trst_only

# FIXME
gdb_memory_map disable

# $_TARGETNAME configure -work-area-phys 0xffa00000 -work-area-size 0x4000 -work-area-backup 0
